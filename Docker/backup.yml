version: '3.9'

services:
  app-db:
    image: postgres:15
    container_name: app_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: lixoeletronico
    ports:
      - "6432:5432"
    volumes:
      - app_data:/var/lib/postgresql/data
      - ./postgres_config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres_config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - app_network

  keycloak-db:
    image: postgres:15
    container_name: keycloak_db
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app_network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    depends_on:
      keycloak-db:
        condition: service_healthy
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_IMPORT_REALM_JSON: /opt/keycloak/data/import/realm-export.json
    ports:
      - "7500:8080"
    volumes:
      - ./keycloak_data:/opt/keycloak/data
      - ./keycloak_setup:/opt/keycloak/data/import
    networks:
      - app_network
    command: start-dev --import-realm

  app:
    build:
      context: ../  # Sobe um n√≠vel para acessar a raiz do projeto
      dockerfile: Docker/Dockerfile  # Caminho relativo ao contexto
    container_name: springboot_app
    depends_on:
      - app-db
    ports:
      - "8080:8080"
    networks:
      - app_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

volumes:
  app_data:
  keycloak_db_data:

networks:
  app_network:
    driver: bridge
